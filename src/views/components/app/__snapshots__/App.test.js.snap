// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(Grid)
        container={true}
>
        <WithStyles(Grid)
                item={true}
                xs={12}
        >
                <header
                        className="App-header"
                >
                        <img
                                alt="logo"
                                className="App-logo"
                                src="logo.svg"
                        />
                        <WithStyles(Typography)
                                color="primary"
                                variant="display2"
                        >
                                React App
                        </WithStyles(Typography)>
                </header>
                <WithStyles(Typography)
                        paragraph={true}
                        variant="headline"
                >
                        To get started, edit 
                        <code>
                                src/App.js
                        </code>
                         and save to hot-reload the page.
                </WithStyles(Typography)>
                <WithStyles(Typography)
                        variant="subheading"
                >
                        Counter implementation with recompose
                </WithStyles(Typography)>
                <withState(withHandlers(Counter)) />
                <WithStyles(Typography)
                        variant="subheading"
                >
                        Counter implementation with render props
                </WithStyles(Typography)>
                <Counter
                        render={[Function]}
                />
                <Connect(lifecycle(PostsWrapper)) />
        </WithStyles(Grid)>
</WithStyles(Grid)>,
      "className": "App",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Grid)
          item={true}
          xs={12}
>
          <header
                    className="App-header"
          >
                    <img
                              alt="logo"
                              className="App-logo"
                              src="logo.svg"
                    />
                    <WithStyles(Typography)
                              color="primary"
                              variant="display2"
                    >
                              React App
                    </WithStyles(Typography)>
          </header>
          <WithStyles(Typography)
                    paragraph={true}
                    variant="headline"
          >
                    To get started, edit 
                    <code>
                              src/App.js
                    </code>
                     and save to hot-reload the page.
          </WithStyles(Typography)>
          <WithStyles(Typography)
                    variant="subheading"
          >
                    Counter implementation with recompose
          </WithStyles(Typography)>
          <withState(withHandlers(Counter)) />
          <WithStyles(Typography)
                    variant="subheading"
          >
                    Counter implementation with render props
          </WithStyles(Typography)>
          <Counter
                    render={[Function]}
          />
          <Connect(lifecycle(PostsWrapper)) />
</WithStyles(Grid)>,
        "container": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <header
              className="App-header"
>
              <img
                            alt="logo"
                            className="App-logo"
                            src="logo.svg"
              />
              <WithStyles(Typography)
                            color="primary"
                            variant="display2"
              >
                            React App
              </WithStyles(Typography)>
</header>,
            <WithStyles(Typography)
              paragraph={true}
              variant="headline"
>
              To get started, edit 
              <code>
                            src/App.js
              </code>
               and save to hot-reload the page.
</WithStyles(Typography)>,
            <WithStyles(Typography)
              variant="subheading"
>
              Counter implementation with recompose
</WithStyles(Typography)>,
            <withState(withHandlers(Counter)) />,
            <WithStyles(Typography)
              variant="subheading"
>
              Counter implementation with render props
</WithStyles(Typography)>,
            <Counter
              render={[Function]}
/>,
            <Connect(lifecycle(PostsWrapper)) />,
          ],
          "item": true,
          "xs": 12,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
/>,
                <WithStyles(Typography)
                  color="primary"
                  variant="display2"
>
                  React App
</WithStyles(Typography)>,
              ],
              "className": "App-header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "React App",
                  "color": "primary",
                  "variant": "display2",
                },
                "ref": null,
                "rendered": "React App",
                "type": [Function],
              },
            ],
            "type": "header",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "To get started, edit ",
                <code>
                  src/App.js
</code>,
                " and save to hot-reload the page.",
              ],
              "paragraph": true,
              "variant": "headline",
            },
            "ref": null,
            "rendered": Array [
              "To get started, edit ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "src/App.js",
                },
                "ref": null,
                "rendered": "src/App.js",
                "type": "code",
              },
              " and save to hot-reload the page.",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Counter implementation with recompose",
              "variant": "subheading",
            },
            "ref": null,
            "rendered": "Counter implementation with recompose",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Counter implementation with render props",
              "variant": "subheading",
            },
            "ref": null,
            "rendered": "Counter implementation with render props",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(Grid)
          container={true}
>
          <WithStyles(Grid)
                    item={true}
                    xs={12}
          >
                    <header
                              className="App-header"
                    >
                              <img
                                        alt="logo"
                                        className="App-logo"
                                        src="logo.svg"
                              />
                              <WithStyles(Typography)
                                        color="primary"
                                        variant="display2"
                              >
                                        React App
                              </WithStyles(Typography)>
                    </header>
                    <WithStyles(Typography)
                              paragraph={true}
                              variant="headline"
                    >
                              To get started, edit 
                              <code>
                                        src/App.js
                              </code>
                               and save to hot-reload the page.
                    </WithStyles(Typography)>
                    <WithStyles(Typography)
                              variant="subheading"
                    >
                              Counter implementation with recompose
                    </WithStyles(Typography)>
                    <withState(withHandlers(Counter)) />
                    <WithStyles(Typography)
                              variant="subheading"
                    >
                              Counter implementation with render props
                    </WithStyles(Typography)>
                    <Counter
                              render={[Function]}
                    />
                    <Connect(lifecycle(PostsWrapper)) />
          </WithStyles(Grid)>
</WithStyles(Grid)>,
        "className": "App",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Grid)
            item={true}
            xs={12}
>
            <header
                        className="App-header"
            >
                        <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                        />
                        <WithStyles(Typography)
                                    color="primary"
                                    variant="display2"
                        >
                                    React App
                        </WithStyles(Typography)>
            </header>
            <WithStyles(Typography)
                        paragraph={true}
                        variant="headline"
            >
                        To get started, edit 
                        <code>
                                    src/App.js
                        </code>
                         and save to hot-reload the page.
            </WithStyles(Typography)>
            <WithStyles(Typography)
                        variant="subheading"
            >
                        Counter implementation with recompose
            </WithStyles(Typography)>
            <withState(withHandlers(Counter)) />
            <WithStyles(Typography)
                        variant="subheading"
            >
                        Counter implementation with render props
            </WithStyles(Typography)>
            <Counter
                        render={[Function]}
            />
            <Connect(lifecycle(PostsWrapper)) />
</WithStyles(Grid)>,
          "container": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <header
                className="App-header"
>
                <img
                                alt="logo"
                                className="App-logo"
                                src="logo.svg"
                />
                <WithStyles(Typography)
                                color="primary"
                                variant="display2"
                >
                                React App
                </WithStyles(Typography)>
</header>,
              <WithStyles(Typography)
                paragraph={true}
                variant="headline"
>
                To get started, edit 
                <code>
                                src/App.js
                </code>
                 and save to hot-reload the page.
</WithStyles(Typography)>,
              <WithStyles(Typography)
                variant="subheading"
>
                Counter implementation with recompose
</WithStyles(Typography)>,
              <withState(withHandlers(Counter)) />,
              <WithStyles(Typography)
                variant="subheading"
>
                Counter implementation with render props
</WithStyles(Typography)>,
              <Counter
                render={[Function]}
/>,
              <Connect(lifecycle(PostsWrapper)) />,
            ],
            "item": true,
            "xs": 12,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <WithStyles(Typography)
                    color="primary"
                    variant="display2"
>
                    React App
</WithStyles(Typography)>,
                ],
                "className": "App-header",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "React App",
                    "color": "primary",
                    "variant": "display2",
                  },
                  "ref": null,
                  "rendered": "React App",
                  "type": [Function],
                },
              ],
              "type": "header",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "To get started, edit ",
                  <code>
                    src/App.js
</code>,
                  " and save to hot-reload the page.",
                ],
                "paragraph": true,
                "variant": "headline",
              },
              "ref": null,
              "rendered": Array [
                "To get started, edit ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "src/App.js",
                  },
                  "ref": null,
                  "rendered": "src/App.js",
                  "type": "code",
                },
                " and save to hot-reload the page.",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Counter implementation with recompose",
                "variant": "subheading",
              },
              "ref": null,
              "rendered": "Counter implementation with recompose",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Counter implementation with render props",
                "variant": "subheading",
              },
              "ref": null,
              "rendered": "Counter implementation with render props",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
